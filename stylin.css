@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@400;900&display=swap');

/* global styles */

* {
	box-sizing: border-box;
	font-family: "Inconsolata", sans-serif;
	font-weight: 400;

	--fgcolor: #151111;
	--fgaccent: #200000;
	--bgcolor: #ffefef;
	
	--codeblockfg: white;
	--codeblockbg: #222;
	--codeinlinefg: #020202;
	--codeinlinebg: #dccccc;
}

::selection {
	background-color: var(--fgcolor);
	color: var(--bgcolor);
}

.fade {
	opacity: 0.5;
}

html {
	margin: 0;
	background-color: var(--bgcolor);
	color: var(--fgcolor);
}

body {
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	align-items: center;
	
	font-size: 18px;
	line-height: 140%;
}

a:active {
	color: red !important; /* so it overrides hover coloration even on more specific selectors */
}

/* all headings (page header and body) */

h1, h2, h3, h4, h5, h6 {
	font-weight: 900;
	line-height: 100%;
}

/******** Page header ********/

header {
	width: 100%;
	height: 7rem;

	background-color: var(--fgcolor);
	padding: 0px;
	
	display: flex;
	align-items: center;
}

header .logo {
	margin: 0 .5rem;
}

header h1 {
	margin: 0;
}

/* header links coloring, reverse of the usual colors for text */
header a {
	color: var(--bgcolor);
	text-decoration: none;
}

/* big homepage link */
header h1 a {
	text-transform: uppercase;
	font-size: min(4em, 5.7vw);
	font-weight: 900;
}

header h1 a:hover {
	text-decoration: underline;
}

/* nav link */
header nav a {
	padding: 0.1em 0.3em;
}

header nav a:hover {
	color: var(--fgcolor);
	background-color: var(--bgcolor);
}

/* spacing */
header .spacefiller {
	flex-grow: 1;
}

header nav {
	margin-right: .5rem;
}

/******** Page body ********/

article {
	width: 70rem;
	max-width: 85%;
	margin: 0 auto;

	padding: 0 1em;
}

article h1 {
	font-size: 2.3em;
	
	margin: 1.6rem 0;
	line-height: 110%;
}

article h1, article h2 {
	width: 100%;

	/* Fancy line thing */
	display: grid;
	grid-template-columns: auto 1fr;
	gap: 0.5em;
	align-items: center;
}

article h1:after, article h2:after {
	/* Fancy line thing */
	content: "";
	border-top: 2px solid var(--fgaccent);
}

article h1, article h2, article h3 {
	color: var(--fgaccent);
	font-weight: 900;
}

article a {
	color: var(--bgcolor);
	background-color: var(--fgcolor);
	text-decoration: none;
	padding: 0.1em 0.3em;
}

article a:hover, article a:focus {
	color: var(--fgaccent);
	background-color: var(--bgcolor);
	text-decoration: underline;
}

article .byline {
	position: relative;
	top: -2em;
	font-size: 75%;
	text-align: right;
	margin-bottom: -2em;
}

article blockquote {
	font-size: 80%;
	
	border-left: 0.5em solid var(--fgcolor);
	padding-top: 0.25em;
	padding-bottom: 0.25em;
	padding-left: 2em;
	line-height: 110%;
}

article ul {
	padding-left: 0; /* override browser style */
	list-style: '- ';
}

article ul li {
	margin-top: 1em;
}

/* Unfortunately my current markdown parser outputs <code> for both inline code and codeblocks. That's annoying. */
article code[class^="language"] {
	display: block;
	color: var(--codeblockfg);
	padding: 1em;
	background-color: var(--codeblockbg);
	max-width: 100%;
	overflow-x: auto;
	
	tab-size: 2;
	-moz-tab-size: 2;
}

article code:not([class^="language"]) {
	background-color: var(--codeinlinebg);
	color: var(--codeinlinefg);
}

/* Quick hack lmao */
h1 code, h2 code, h3 code, h4 code {
	padding: .45em;
}

hr {
	border: none;
	border-top: 2px solid var(--fgcolor);
	overflow: visible;
	text-align: center;
	width: 70%;
	height: 0;
	margin: 3em auto;
}

hr:after {
	content: "";
	display: inline-block;
	
	width: 48px;
	height: 24px;
	position: relative;
	top: -12px;
	
	background-color: var(--bgcolor);
	background-image: url("/img/tiny_dragnmlem.png");
	background-position: center;
	background-repeat: no-repeat;
}

hr.cool:after {
	background-image: url("/img/tiny_dragncool.png");
}

hr.think:after {
	background-image: url("/img/tiny_dragnthink.png");
}

.youtube {
	display: block;
	margin: 0 auto;
}

@media (max-width: 40rem) {
	body {
		font-size: 1em;
	}
	
	article {
		max-width: 95%;
		padding: unset;
	}
	
	header h1 {
		font-size: 1.5em;
		max-width: 5em; /* forces a line break after all three words */
	}
	
	:not(h1) > a {
		padding: unset;
	}
}